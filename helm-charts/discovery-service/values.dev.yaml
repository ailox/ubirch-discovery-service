environment: local
namespace: ubirch-dev
image:
  tag: latest # set to your local image tag if needed

# settings for ingest
discoveryservice:
  noHost: true
  ingestFQDN: localhost
  kafkaURL: "kafka.core-dev.svc.cluster.local:9092"
  redisSecretName: "redis-secrets"
  serverUuid: "9d3c78ff-22f3-4441-a5d1-85c636d486ff"
  kafka:
    bootstrapServers: "kafka.core-dev:9092"
    timeout: 2
    consumer:
      errorTopic: "com.ubirch.eventlog.discovery-error"
      topics: "com.ubirch.eventlog.discovery, test"
      group: "discovery-kafka"
      poolRecords: 500
    producer:
      topics: "com.ubirch.eventlog.discovery, test"
      errorTopic: "com.ubirch.eventlog.discovery-error"
  prometheus:
    port: 4321
  core:
    hosts: "[192.168.14.161]"
    port: 8182

janusgraph:
  image: ubirch/janusgraph
  tag: "0.0.2"
  pullPolicy: IfNotPresent
  replicaCount: 1
  properties:
    storage:
      hostname: 172.17.0.5
      backend: cql
      keyspace: janusgraph
    cache:
      dbCache: true
      dbCacheCleanWait: 20
      dbCacheTime: 1000
      dbCacheSize: 0.25
    metricsJmx:
      enabled: true
      domain: janusgraph
  gremlinServer:


redis:
  masterURL: "redis-stable-master.core-dev.svc.cluster.local:6379"
  slaveURL: "redis-stable-slave.core-dev.svc.cluster.local:6379"


ingress:
  enabled: true
  annotations:
    certmanager.k8s.io/acme-challenge-type: "dns01"
    certmanager.k8s.io/cluster-issuer: "letsencrypt-dev"
    certmanager.k8s.io/acme-dns01-provider: "dev-dns"
    kubernetes.io/ingress.allow-http: "false"
  path: /
  hosts:
    - niomon.dev.ubirch.com
  tls:
    - secretName: niomon-dev-ubirch-com-certificate
      hosts:
        - niomon.dev.ubirch.com
