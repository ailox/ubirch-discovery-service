environment: local
namespace: ubirch-dev
image:
  tag: latest # set to your local image tag if needed

# settings for ingest
discovery-service:
  noHost: true
  ingestFQDN: localhost
  kafkaURL: "kafka.core-dev.svc.cluster.local:9092" #TOASK
  redisSecretName: "redis-secrets" #TOASK
  serverUuid: "9d3c78ff-22f3-4441-a5d1-85c636d486ff" #TOASK
  env:
    - name: STAGE_DISC_ENV_KAFKA_CONS_BOOTSTRAP
      value: "localhost:9092"
    - name: STAGE_DISC_ENV_KAFKA_CONS_TOPIC
      value:  "com.ubirch.eventlog.discovery, test"
    - name: STAGE_DISC_ENV_KAFKA_CONS_GROUPID
      value: "my group id"
    - name: STAGE_DISC_ENV_KAFKA_CONS_ERRORTOPIC
      value: "com.ubirch.eventlog.discovery-error"
    - name: STAGE_DISC_ENV_KAFKA_CONS_TIMEOUT
      value: 2
    - name: STAGE_DISC_ENV_KAFKA_CONS_POOLREC
      value: 500
    - name: STAGE_DISC_ENV_KAFKA_PROD_BOOTSTRAP
      value: "localhost:9092"
    - name: STAGE_DISC_ENV_KAFKA_PROD_ERRORTOPIC
      value: "com.ubirch.eventlog.discovery-error"
    - name: STAGE_DISC_ENV_KAFKA_PROD_TOPIC
      value: "com.ubirch.eventlog.discovery, test"
    - name: STAGE_DISC_ENV_KAFKA_PROD_TIMEOUT
      value: 2
    - name: STAGE_DISC_ENV_KAFKA_PROMETHEUS
      value: 4321
    - name: STAGE_DISC_ENV_CORE_HOSTS
      value: [192.168.14.161]
    - name: STAGE_DISC_ENV_CORE_PORT
      value: 8182


redis:
  masterURL: "redis-stable-master.core-dev.svc.cluster.local:6379" #TOASK
  slaveURL: "redis-stable-slave.core-dev.svc.cluster.local:6379" #TOASK

#TOASK
ingress:
  enabled: true
  annotations:
    certmanager.k8s.io/acme-challenge-type: "dns01"
    certmanager.k8s.io/cluster-issuer: "letsencrypt-dev"
    certmanager.k8s.io/acme-dns01-provider: "dev-dns"
    kubernetes.io/ingress.allow-http: "false"
  path: /
  hosts:
    - niomon.dev.ubirch.com
  tls:
    - secretName: niomon-dev-ubirch-com-certificate
      hosts:
        - niomon.dev.ubirch.com
